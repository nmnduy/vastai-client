---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: vastai-db-pvc # Name of the PVC
spec:
  accessModes:
    - ReadWriteOnce # Suitable for single-node access, common for block storage
  resources:
    requests:
      storage: 200Gi # Request 200Gi of storage
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: vastai-client-server
  labels:
    app: vastai-client-server
spec:
  replicas: 1 # Keep replicas at 1 for SQLite writer safety
  selector:
    matchLabels:
      app: vastai-client-server
  template:
    metadata:
      labels:
        app: vastai-client-server
    spec:
      volumes: # Define the volume using the PersistentVolumeClaim
      - name: db-storage
        persistentVolumeClaim:
          claimName: vastai-db-pvc # Reference the PVC created above
      containers:
      - name: server # Main application container
        image: 073692673157.dkr.ecr.ap-southeast-1.amazonaws.com/vastai-client-server:v0.0.1
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 50051
          name: grpc
          protocol: TCP
        volumeMounts: # Mount the PVC volume
        - name: db-storage
          mountPath: /data # Mount the PVC volume at /data
        env:
          # Database configuration - SQLite file path on the PVC
          - name: DATABASE_URL
            value: "/data/vastai_status.db"
        resources:
          requests:
            cpu: "100m"
            memory: "128Mi"
          limits:
            cpu: "500m"
            memory: "512Mi"
        livenessProbe:
          tcpSocket:
            port: grpc
          # Delays might still be relevant if Litestream restore takes time on first start
          initialDelaySeconds: 25
          periodSeconds: 20
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          tcpSocket:
            port: grpc
          initialDelaySeconds: 15
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: litestream-replicator
  labels:
    app: litestream-replicator
spec:
  replicas: 1 # Only one replicator is needed
  selector:
    matchLabels:
      app: litestream-replicator
  template:
    metadata:
      labels:
        app: litestream-replicator
    spec:
      volumes: # Define the volume using the same PersistentVolumeClaim
      - name: db-storage
        persistentVolumeClaim:
          claimName: vastai-db-pvc # Reference the PVC
      containers:
      - name: litestream
        image: litestream/litestream:latest
        args:
          # Run replicate command directly (no -exec needed)
          - "replicate"
          - "/data/vastai_status.db" # The database file on the PVC to replicate/restore
          - "r2://vastai-client/vastai_client.db" # Replica URL destination
        env:
          # Set replica URL env var (optional as it's in args, but good practice)
          - name: LITESTREAM_REPLICA_URL
            value: "r2://vastai-client/vastai_client.db"
          # Load R2 credentials from the Kubernetes secret
          - name: LITESTREAM_ACCESS_KEY_ID
            valueFrom:
              secretKeyRef:
                name: r2-credentials
                key: LITESTREAM_ACCESS_KEY_ID
          - name: LITESTREAM_SECRET_ACCESS_KEY
            valueFrom:
              secretKeyRef:
                name: r2-credentials
                key: LITESTREAM_SECRET_ACCESS_KEY
          # R2 endpoint URL
          - name: LITESTREAM_ENDPOINT_URL
            value: https://d1d69208d12bdf919319004fa00204c5.r2.cloudflarestorage.com
        volumeMounts:
          - name: db-storage # Mount the PVC volume
            mountPath: /data # Mount path must match where the DB file is located
        resources: # Resource requests/limits for Litestream
          requests:
            cpu: "50m"
            memory: "64Mi"
          limits:
            cpu: "100m"
            memory: "128Mi"

---
# Service to expose the gRPC Server within the cluster
apiVersion: v1
kind: Service
metadata:
  name: vastai-client-server-service
  labels:
    app: vastai-client-server
spec:
  selector:
    app: vastai-client-server
  ports:
    - protocol: TCP
      port: 50051
      targetPort: grpc # Points to the grpc port defined in the 'server' container
      name: grpc
  type: ClusterIP
